//Welcome to the Android-- wiki!
//作者原创，转载请指明出处。
```
//1.先写布局文件
 <LinearLayout
        android:layout_width="match_parent"
        android:layout_height="50dp"
        android:layout_marginEnd="15dp"
        android:layout_marginLeft="15dp"
        android:layout_marginTop="10dp"
        android:orientation="horizontal">

        <com.zifae.exchange.ui.widget.ClearEditText
            android:id="@+id/et_verification_code"
            style="@style/register_edittext_style"
            android:layout_width="0dp"
            android:layout_weight="3"
            android:background="@drawable/edittext_shape"
            android:hint="@string/login_phone_verification_input"
            android:inputType="number"
            android:textCursorDrawable="@null"
            android:paddingLeft="15dp"/>

        <TextView
            android:id="@+id/tv_reset_timer"
            style="@style/register_edittext_style"
            android:layout_width="0dp"
            android:layout_marginLeft="7dp"
            android:layout_weight="2"
            android:gravity="center_vertical"
            android:background="@drawable/edittext_shape"
            android:text="@string/personal_setting_payment_send_smscode"
            android:inputType="phone"
            android:paddingLeft="15dp"/>
    </LinearLayout>
```

//2.再写java代码：

  ```     //找到控件 
          mTvRestTimer = (TextView) findViewById(R.id.tv_reset_timer);
         //绑定点击事件（此处用rx实现）
               RxView.clicks(mTvResetTimer)
                .throttleFirst(2, TimeUnit.SECONDS)
                .compose(this.<Void>bindToLifecycle())
                .observeOn(AndroidSchedulers.mainThread())
                .subscribe(new Action1<Void>() {
                    @Override
                    public void call(Void aVoid) {
                        sendSmsCode();
                        Log.i(TAG, "click sendSmsCode button.");
                    }
                });

```
//3.点击你的发送按钮

//4.点击完事后，按钮该倒计时吧，在回调函数中调用倒计时。

```
//你肯定有个回调函数收取服务器反馈吧（这里我的是OnSuccess....）
    @Override
    public void onSuccess(Object response, int tag) {
      getCertificateCode(60);//开启倒计时
        }
    }

    //定时器封装
        private void getCertificateCode(int time) {
            mTvResetTimer.setEnabled(false);
            mTvResetTimer.setAlpha(0.5f);
            mTimer = new Timer(true);
            COUNT_DOWN_TIMER = time;
            Observable.create(new Observable.OnSubscribe<Integer>() {
                @Override
                public void call(final Subscriber<? super Integer> subscriber) {
                    mTimer.schedule(new TimerTask() {
                        @Override
                        public void run() {
                            --COUNT_DOWN_TIMER;
                            subscriber.onNext(COUNT_DOWN_TIMER);
                        }
                    }, 0, 1000);
                }
            }).subscribeOn(Schedulers.io()).observeOn(AndroidSchedulers.mainThread()).subscribe(new Action1<Integer>() {
                @Override
                public void call(Integer integer) {
                    if (integer <= 0) {
                        mTimer.cancel();
                        mTvResetTimer.setEnabled(true);
                        mTvResetTimer.setAlpha(1f);
                        mTvResetTimer.setText("获取验证码" + ""
                                + "(60)");
                        return;
                    }
                    mTvResetTimer.setText("重新获取(<xliff:g>%1$d</xliff:g>s)",integer));
                }
            });
        }

    }
```
ok了，欢迎反馈.
